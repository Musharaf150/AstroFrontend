---
import { Image } from "astro:assets";
import Marked from "../../../components/Marked.astro";
import fetchApi from "../../../lib/strapi";
import SlugLayout from "../../../layouts/SlugLayout.astro";

export async function getStaticPaths() {
    const locales = ["ar", "en"]; 
    const allPaths = [];
    try {
        for(const lang in locales){
            const articles = await fetchApi({
                endpoint: 'blogs',
                wrappedByKey: 'data',
                locale: locales[lang]
            });
            if(articles.length > 0){
                allPaths.push(...articles.map((article)=>({
                    params: {
                        slug: article.slug,
                        lang: article.locale
                    },
                    props: article
                })));
            }
        }
    } catch (error) {
        console.error("Error fetching blog articles:", error);
        return [];
    }
    return allPaths;
}
const article = Astro.props;
---

<SlugLayout>
    {article ? (
    <Image src={`${article.image[0].url}`}
    alt={article.title}
    height="400"
    width="400" class="slugImage"/>
<h1>{article.title}</h1>
<Marked content={article.content}/>
    ):
    <div>
        No Data Found!!!
    </div>
    }
</SlugLayout>
<script>
    document.addEventListener("DOMContentLoaded", () => {
      const select = document.querySelector("#languageSelect");
  
      // Set the dropdown value to the current language on page load
      const currentUrl = new URL(window.location.href);
      const currentLang = currentUrl.pathname.split("/").slice(-2, -1)[0];
      select.value = 'en'; // Sync the select dropdown with the current language
  
      // Add event listener for the select dropdown
      select.addEventListener("change", (event) => {
        const selectedLang = event.target.value;
  
        // Construct the new URL with the selected language
        const segments = currentUrl.pathname.split("/");
        const version = segments[segments.length - 1]; // Preserve version parameter
        segments[segments.length - 2] = selectedLang; // Update the language
        const newPath = segments.join("/");
  
        // Navigate to the updated URL
        window.location.href = newPath;
      });
    });
  </script>